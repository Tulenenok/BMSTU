from tkinter import *
from tkinter.messagebox import *
import tkinter.filedialog as fd

from view.Btn import WrapButton
from view.CanvasPoint import CanvasPoint
from view.Settings import Settings
from view.keyInput import *

from model.Tools import Tools

import controll.controllModel


def addPointKey(canva, XYform):
    x, y = XYform.getXY()
    if not Tools.isFloat(x) or not Tools.isFloat(y):
        showinfo('Error', '–ù–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ç–æ—á–∫–∏ (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞)')
        return

    canva.canva.showPoint(float(x), float(y))
    XYform.clear()

    canva.canva.update()
    canva.canva.save()


def delPointKey(canva, XYform):
    x, y = XYform.getXY()
    print(x, y)
    if not Tools.isFloat(x) or not Tools.isFloat(y):
        showinfo('Error', '–ù–µ–≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ç–æ—á–∫–∏ (–¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞)')
        return

    delPoint = CanvasPoint(float(x), float(y))
    flagWasPoint = canva.canva.delPoint(delPoint)

    if not flagWasPoint:
        showinfo('Warning', '–¢–æ—á–∫–∏ —Å —Ç–∞–∫–∏–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')
        return

    XYform.clear()
    canva.canva.save()


def inputPointsFromFile(canva):
    filetypes = (("–¢–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª", "*.txt"), ("Excel", "*.xlsx"))
    filename = fd.askopenfilename(title="–û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª", initialdir=Settings.DIR_INPUT_POINTS,
                                  filetypes=filetypes, multiple=False)
    if filename and filename[-4::] == '.txt':
        coords = controll.controllModel.inputPointsTXT(filename)
        if Tools.isFloat(coords):
            showinfo('–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞' if coords == Tools.INVALID_FILENAME else '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö',
                     '–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞' if coords == -1 else f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –Ω–∞ {coords} —Å—Ç—Ä–æ–∫–µ. \n\n'
                              '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ç–æ—á–µ–∫ –≤–≤–µ–¥–µ–Ω—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ x ; y –∏ —á—Ç–æ –∫–∞–∂–¥–∞—è —Ç–æ—á–∫–∞ –≤–≤–µ–¥–µ–Ω–∞ '
                              '–Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ')
            return

    elif filename and filename[-5::] == '.xlsx':
        coords = controll.controllModel.inputPointsXLSX(filename)
        if Tools.isInt(coords):
            if coords == Tools.INVALID_FILENAME:
                showinfo('–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞', '–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞')
            elif coords == Tools.INVALID_LISTNAME:
                showinfo('–û—à–∏–±–∫–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –ª–∏—Å—Ç–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ª–∏—Å—Ç —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º Points')
            elif coords == Tools.INVALID_HEAD:
                showinfo('–û—à–∏–±–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Ç–∞–±–ª–∏—Ü—ã', '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–∞–∑–≤–∞–Ω–∏—è X –∏ Y')
            elif coords == Tools.INVALID_DATA:
                showinfo('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö', '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ö-—Å–æ–≤ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º y-–∫–æ–≤')
            elif coords == Tools.INVALID_FORMAT_DATA:
                showinfo('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö', '–§–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö –Ω–µ–≤–µ—Ä–Ω—ã–π (–æ–∂–∏–¥–∞–ª–∏—Å—å –≤–µ—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —á–∏—Å–ª–∞)')
            else:
                showinfo('Error', '–ù–µ–ø–æ–Ω—è—Ç–Ω–∞—è –æ—à–∏–±–∫–∞, –Ω–æ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —ç—Ç–∏–º')
            return
    elif filename:
        showinfo('–û—à–∏–±–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞', '–ù–µ–≤–µ—Ä–Ω–æ —É–∫–∞–∑–∞–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞')
        return
    else:
        return

    if coords == [[]]:
        showinfo('Empty file', '–í—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã—Ö, —Ç–æ—á–∫–∏ –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã.')
        return

    canva.canva.clear()
    for c in coords:
        for p in c:
            canva.canva.showPoint(p[0], p[1])
        canva.canva.startNewPolygon('sdfv')

    canva.canva.update()
    canva.canva.save()


def savePointsToFile(canva):
    new_file = fd.asksaveasfile(title="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª", defaultextension=".txt",
                                filetypes=(("–¢–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª", "*.txt"), ))
    if new_file:
        for pol in canva.getPointsForSave():
            for p in pol:
                new_file.write(p.likeStr() + '\n')
            new_file.write(Tools.SEPARATOR_POL + '\n')
        new_file.close()


def clearCanva(canva):
    canva.clear()
    canva.canva.save()

def scaleShiftRotate(root, canva):
    z = ZoomRotateShift(root, canva)
    z.show()


class UpButtons:
    def __init__(self, root, c):
        self.root = root
        self.canva = c
        self.f = Frame(self.root, width=500, height=60)
        self.f['bg'] = Settings.COLOR_MAIN_BG

        self.bClear = WrapButton(self.f, txt='üóë', command=lambda: clearCanva(self.canva), name='clear all')
        self.bInput = WrapButton(self.f, txt='üìÇ', command=lambda: inputPointsFromFile(self.canva), name='take points from file')
        self.bSave = WrapButton(self.f, txt='üìã', command=lambda: savePointsToFile(self.canva), name='save points')
        self.bReturn = WrapButton(self.f, txt='‚èé', command=lambda: root.loadVersion(), name='cancel')
        self.bGo = WrapButton(self.f, txt='üöÄ', command=lambda: scaleShiftRotate(root, c), name='scale shift rotate')

    def show(self, posx=Settings.X_CANVA, posy=Settings.Y_INPUT + 9):
        startX, startY = 0, 0
        self.bReturn.show(posx=startX, posy=startY)
        self.bInput.show(posx=startX + 1 * Settings.BTN_STEP, posy=startY)
        self.bSave.show(posx=startX + 2 * Settings.BTN_STEP, posy=startY)
        self.bClear.show(posx=startX + 3 * Settings.BTN_STEP, posy=startY)
        self.bGo.show(posx=startX + 4 * Settings.BTN_STEP, posy=startY)

        self.f.place(x=posx, y=posy)